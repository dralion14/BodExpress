#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.1
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CORE
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BODEXPRESS")]
	public partial class BODEXDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertMATERIAL(MATERIAL instance);
    partial void UpdateMATERIAL(MATERIAL instance);
    partial void DeleteMATERIAL(MATERIAL instance);
    partial void InsertMATERIAL_KIT(MATERIAL_KIT instance);
    partial void UpdateMATERIAL_KIT(MATERIAL_KIT instance);
    partial void DeleteMATERIAL_KIT(MATERIAL_KIT instance);
    #endregion
		
		public BODEXDataContext() : 
				base(global::CORE.Properties.Settings.Default.BODEXPRESSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BODEXDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BODEXDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BODEXDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BODEXDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MATERIAL> Materiales
		{
			get
			{
				return this.GetTable<MATERIAL>();
			}
		}
		
		public System.Data.Linq.Table<MATERIAL_KIT> Materiales_Kit
		{
			get
			{
				return this.GetTable<MATERIAL_KIT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MATERIAL")]
	public partial class MATERIAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _M_ID;
		
		private string _M_NOMBRE;
		
		private string _M_DESCRIPCION;
		
		private string _M_TIPO;
		
		private int _M_MEDIDA_DISTRIBUCION;
		
		private int _M_MEDIDA_COMPRA;
		
		private int _M_STOCK_REAL;
		
		private int _M_STOCK_IDEAL;
		
		private int _M_STOCK_BAJO;
		
		private EntityRef<MATERIAL_KIT> _MATERIAL_KIT;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnM_IDChanging(decimal value);
    partial void OnM_IDChanged();
    partial void OnM_NOMBREChanging(string value);
    partial void OnM_NOMBREChanged();
    partial void OnM_DESCRIPCIONChanging(string value);
    partial void OnM_DESCRIPCIONChanged();
    partial void OnM_TIPOChanging(string value);
    partial void OnM_TIPOChanged();
    partial void OnM_MEDIDA_DISTRIBUCIONChanging(int value);
    partial void OnM_MEDIDA_DISTRIBUCIONChanged();
    partial void OnM_MEDIDA_COMPRAChanging(int value);
    partial void OnM_MEDIDA_COMPRAChanged();
    partial void OnM_STOCK_REALChanging(int value);
    partial void OnM_STOCK_REALChanged();
    partial void OnM_STOCK_IDEALChanging(int value);
    partial void OnM_STOCK_IDEALChanged();
    partial void OnM_STOCK_BAJOChanging(int value);
    partial void OnM_STOCK_BAJOChanged();
    #endregion
		
		public MATERIAL()
		{
			this._MATERIAL_KIT = default(EntityRef<MATERIAL_KIT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal M_ID
		{
			get
			{
				return this._M_ID;
			}
			set
			{
				if ((this._M_ID != value))
				{
					this.OnM_IDChanging(value);
					this.SendPropertyChanging();
					this._M_ID = value;
					this.SendPropertyChanged("M_ID");
					this.OnM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_NOMBRE", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string M_NOMBRE
		{
			get
			{
				return this._M_NOMBRE;
			}
			set
			{
				if ((this._M_NOMBRE != value))
				{
					this.OnM_NOMBREChanging(value);
					this.SendPropertyChanging();
					this._M_NOMBRE = value;
					this.SendPropertyChanged("M_NOMBRE");
					this.OnM_NOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_DESCRIPCION", DbType="VarChar(100)")]
		public string M_DESCRIPCION
		{
			get
			{
				return this._M_DESCRIPCION;
			}
			set
			{
				if ((this._M_DESCRIPCION != value))
				{
					this.OnM_DESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._M_DESCRIPCION = value;
					this.SendPropertyChanged("M_DESCRIPCION");
					this.OnM_DESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_TIPO", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string M_TIPO
		{
			get
			{
				return this._M_TIPO;
			}
			set
			{
				if ((this._M_TIPO != value))
				{
					this.OnM_TIPOChanging(value);
					this.SendPropertyChanging();
					this._M_TIPO = value;
					this.SendPropertyChanged("M_TIPO");
					this.OnM_TIPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_MEDIDA_DISTRIBUCION", DbType="Int NOT NULL")]
		public int M_MEDIDA_DISTRIBUCION
		{
			get
			{
				return this._M_MEDIDA_DISTRIBUCION;
			}
			set
			{
				if ((this._M_MEDIDA_DISTRIBUCION != value))
				{
					this.OnM_MEDIDA_DISTRIBUCIONChanging(value);
					this.SendPropertyChanging();
					this._M_MEDIDA_DISTRIBUCION = value;
					this.SendPropertyChanged("M_MEDIDA_DISTRIBUCION");
					this.OnM_MEDIDA_DISTRIBUCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_MEDIDA_COMPRA", DbType="Int NOT NULL")]
		public int M_MEDIDA_COMPRA
		{
			get
			{
				return this._M_MEDIDA_COMPRA;
			}
			set
			{
				if ((this._M_MEDIDA_COMPRA != value))
				{
					this.OnM_MEDIDA_COMPRAChanging(value);
					this.SendPropertyChanging();
					this._M_MEDIDA_COMPRA = value;
					this.SendPropertyChanged("M_MEDIDA_COMPRA");
					this.OnM_MEDIDA_COMPRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_STOCK_REAL", DbType="Int NOT NULL")]
		public int M_STOCK_REAL
		{
			get
			{
				return this._M_STOCK_REAL;
			}
			set
			{
				if ((this._M_STOCK_REAL != value))
				{
					this.OnM_STOCK_REALChanging(value);
					this.SendPropertyChanging();
					this._M_STOCK_REAL = value;
					this.SendPropertyChanged("M_STOCK_REAL");
					this.OnM_STOCK_REALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_STOCK_IDEAL", DbType="Int NOT NULL")]
		public int M_STOCK_IDEAL
		{
			get
			{
				return this._M_STOCK_IDEAL;
			}
			set
			{
				if ((this._M_STOCK_IDEAL != value))
				{
					this.OnM_STOCK_IDEALChanging(value);
					this.SendPropertyChanging();
					this._M_STOCK_IDEAL = value;
					this.SendPropertyChanged("M_STOCK_IDEAL");
					this.OnM_STOCK_IDEALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_STOCK_BAJO", DbType="Int NOT NULL")]
		public int M_STOCK_BAJO
		{
			get
			{
				return this._M_STOCK_BAJO;
			}
			set
			{
				if ((this._M_STOCK_BAJO != value))
				{
					this.OnM_STOCK_BAJOChanging(value);
					this.SendPropertyChanging();
					this._M_STOCK_BAJO = value;
					this.SendPropertyChanged("M_STOCK_BAJO");
					this.OnM_STOCK_BAJOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATERIAL_MATERIAL_KIT", Storage="_MATERIAL_KIT", ThisKey="M_ID", OtherKey="M_ID", IsUnique=true, IsForeignKey=false)]
		public MATERIAL_KIT MATERIAL_KIT
		{
			get
			{
				return this._MATERIAL_KIT.Entity;
			}
			set
			{
				MATERIAL_KIT previousValue = this._MATERIAL_KIT.Entity;
				if (((previousValue != value) 
							|| (this._MATERIAL_KIT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MATERIAL_KIT.Entity = null;
						previousValue.MATERIAL = null;
					}
					this._MATERIAL_KIT.Entity = value;
					if ((value != null))
					{
						value.MATERIAL = this;
					}
					this.SendPropertyChanged("MATERIAL_KIT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MATERIAL_KIT")]
	public partial class MATERIAL_KIT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _M_ID;
		
		private decimal _MAT_M_ID;
		
		private int _MK_CANTIDAD;
		
		private EntityRef<MATERIAL> _MATERIAL;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnM_IDChanging(decimal value);
    partial void OnM_IDChanged();
    partial void OnMAT_M_IDChanging(decimal value);
    partial void OnMAT_M_IDChanged();
    partial void OnMK_CANTIDADChanging(int value);
    partial void OnMK_CANTIDADChanged();
    #endregion
		
		public MATERIAL_KIT()
		{
			this._MATERIAL = default(EntityRef<MATERIAL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal M_ID
		{
			get
			{
				return this._M_ID;
			}
			set
			{
				if ((this._M_ID != value))
				{
					if (this._MATERIAL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnM_IDChanging(value);
					this.SendPropertyChanging();
					this._M_ID = value;
					this.SendPropertyChanged("M_ID");
					this.OnM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAT_M_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal MAT_M_ID
		{
			get
			{
				return this._MAT_M_ID;
			}
			set
			{
				if ((this._MAT_M_ID != value))
				{
					this.OnMAT_M_IDChanging(value);
					this.SendPropertyChanging();
					this._MAT_M_ID = value;
					this.SendPropertyChanged("MAT_M_ID");
					this.OnMAT_M_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MK_CANTIDAD", DbType="Int NOT NULL")]
		public int MK_CANTIDAD
		{
			get
			{
				return this._MK_CANTIDAD;
			}
			set
			{
				if ((this._MK_CANTIDAD != value))
				{
					this.OnMK_CANTIDADChanging(value);
					this.SendPropertyChanging();
					this._MK_CANTIDAD = value;
					this.SendPropertyChanged("MK_CANTIDAD");
					this.OnMK_CANTIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATERIAL_MATERIAL_KIT", Storage="_MATERIAL", ThisKey="M_ID", OtherKey="M_ID", IsForeignKey=true)]
		public MATERIAL MATERIAL
		{
			get
			{
				return this._MATERIAL.Entity;
			}
			set
			{
				MATERIAL previousValue = this._MATERIAL.Entity;
				if (((previousValue != value) 
							|| (this._MATERIAL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MATERIAL.Entity = null;
						previousValue.MATERIAL_KIT = null;
					}
					this._MATERIAL.Entity = value;
					if ((value != null))
					{
						value.MATERIAL_KIT = this;
						this._M_ID = value.M_ID;
					}
					else
					{
						this._M_ID = default(decimal);
					}
					this.SendPropertyChanged("MATERIAL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
